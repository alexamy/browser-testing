// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`convert async function to async generator 1`] = `
"import { it } from '@framework';

const x = 1;
const y = 2;

it('increments', async function* test() {
  yield 0;
  const screen = render(<Counter start={0} />);
  yield 1;
  const count = screen.getByText('Count: 0');
  yield 3;

  const increment = screen.getByRole('button', { name: /Inc/ });
  yield 4;
  expect(count.innerText).equals('Count: 3');

  //#region conditionals
  yield 7;
  if (true) {
    yield 8;
    const x = 1;
  } else {
    yield 10;
    const y = 1;
  }
  yield 13;

  if (true) f();
  yield 15;

  if (true) f();
  else f();
  yield 18;

  true ? f() : f();

  //#region cycles
  yield 21;
  for (let i = 0; i < 3; i++) await userEvent.click(increment);
  yield 23;

  for (let i = 0; i < 3; i++) {
    yield 24;
    await userEvent.click(increment);
  }
  yield 27;

  while (conidition) await f();
  yield 28;
  while (conidition) {
    yield 29;
    await f();
  }

  // also for-in, for-of, do-while

  //#region switch
  yield 35;
  switch (x) {
    case 1:
      await userEvent.click(increment);
      break;
    default:
      await userEvent.click(increment);
      if (condition) {
        console.log('');
      }
      break;
  }
});"
`;
