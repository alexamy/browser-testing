// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`calculates persistent hash based on test source code, excluding extra indentation 1`] = `
"it(
  'description',
  () => {
    const x = 1;
  },
  {
    id: 'eb43faca169b4',
    source: ['const x = 1;'],
    generator: async function* test() {
      yield 0;
      const x = 1;
    },
  }
);

// persist for the same call
it(
  'description',
  () => {
    const x = 1;
  },
  {
    id: 'd6c6dddb5f661',
    source: ['const x = 1;'],
    generator: async function* test() {
      yield 0;
      const x = 1;
    },
  }
);

// doesn't depend on spaces newlines etc
// prettier-ignore
it('description', () => {const x = 1;}, { "id": "88eee56ad7b91", "source": [], "generator": async function* test() {yield -1;const x = 1;} });

describe('group', () => {
  // doesn't depend on indentation
  it(
    'description',
    () => {
      const x = 1;
    },
    {
      id: 'ff33854237258',
      source: ['const x = 1;'],
      generator: async function* test() {
        yield 0;
        const x = 1;
      },
    }
  );
});

// depends on description
it(
  'description 2',
  () => {
    const x = 1;
  },
  {
    id: 'cb909b789b81',
    source: ['const x = 1;'],
    generator: async function* test() {
      yield 0;
      const x = 1;
    },
  }
);

// depends on test body
it(
  'description',
  () => {
    const y = 2;
  },
  {
    id: 'b4d0d300e7aeb',
    source: ['const y = 2;'],
    generator: async function* test() {
      yield 0;
      const y = 2;
    },
  }
);

// depends on async or not
it(
  'description',
  async () => {
    const x = 1;
  },
  {
    id: 'f7904711a061c',
    source: ['const x = 1;'],
    generator: async function* test() {
      yield 0;
      const x = 1;
    },
  }
);

// is the same as previous, but different for async
it(
  'description',
  async () => {
    const x = 1;
  },
  {
    id: 'b5fa79ed7598c',
    source: ['const x = 1;'],
    generator: async function* test() {
      yield 0;
      const x = 1;
    },
  }
);"
`;
